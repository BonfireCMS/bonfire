#!/bin/bash

################################################################################
# variables                                                                    #
################################################################################
BONFIRE_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
BONFIRE_DB=bonfire
DEFAULT_PG_USERNAME=postgres
DEFAULT_PG_PASSWORD=postgres
DOCKER_IMAGES=("dylanfoster/bonfire" "dylanfoster/nginx-node" "postgres:9.4")
DOCKER_CONTAINERS=("bonfire" "nginx" "postgres")
pgUser=
pgPass=

################################################################################
# functions                                                                    #
################################################################################
log(){
  echo -e "$1";
}

info() {
  log "\033[1;32m==> $@\033[0m";
}

success() {
  log "\033[0;32m✔ $@\033[0m";
}

error() {
  log "\033[1;31m✖ $@\033[0m";
}

# find or create the data volume
check_data_volume() {
  info "checking data volume..."
  docker volume ls | grep pg-data || docker volume create --name pg-data
}

clean() {
  scripts/clean

  for container in ${DOCKER_CONTAINERS[@]}; do
    docker rm -f $container
  done

  for image in ${DOCKER_IMAGES[@]}; do
    docker pull $image
  done
}

header() {
  echo -e " _                     __  _              "
  echo -e "| |                   / _|(_)             "
  echo -e "| |__    ___   _ __  | |_  _  _ __   ___  "
  echo -e "| '_ \  / _ \ | '_ \ |  _|| || '__| / _ \\"
  echo -e "| |_) || (_) || | | || |  | || |   |  __/ "
  echo -e "|_.__/  \___/ |_| |_||_|  |_||_|    \___| "
  echo ""
}

# run migrations
migrate() {
  info "running migrations..."
  docker exec -it \
    bonfire \
    sh -c 'cd server && npm run db:migrate && npm run db:seed'
  success "migrations complete"
}

# prompts
prompt_for_password() {
  read -p "Enter desired PostgreSQL password: ($DEFAULT_PG_USERNAME)" pgPass
  pgPass=${pgPass:-$DEFAULT_PG_PASSWORD}
}

prompt_for_username() {
  read -p "Enter desired PostgreSQL username: ($DEFAULT_PG_USERNAME)" pgUser
  pgUser=${pgUser:-$DEFAULT_PG_USERNAME}
}

# start bonfire
start_bonfire() {
  info "starting bonfire..."
  docker run --name bonfire \
    --link postgres \
    -e POSTGRES_USER=$pgUser \
    -e POSTGRES_PASSWORD=$pgPass \
    -e POSTGRES_DB=$BONFIRE_DB \
    -p 3000:3000 \
    -v pg-data:/data/app/content/data \
    -d dylanfoster/bonfire
  success "bonfire running"
}

start_nginx() {
  info "starting nginx..."
  docker run --name nginx \
    --link bonfire:app \
    -v $(pwd):/data/http \
    -p 80:80 \
    -d dylanfoster/nginx-node
  success "nginx running"
}

# start postgres container
start_postgres() {
  info "starting postgres..."
  docker run --name postgres -it \
    -e POSTGRES_USER=$pgUser \
    -e POSTGRES_PASSWORD=$pgPass \
    -e POSTGRES_DB=$BONFIRE_DB \
    -v pg-data:/var/lib/postgresql/data \
    -d postgres:9.4
  success "postgres running"
}

################################################################################
# go!                                                                          #
################################################################################
header
clean
info "installing dependencies..."
scripts/install
prompt_for_username
prompt_for_password
check_data_volume
start_postgres
sleep 8
start_bonfire
sleep 8
start_nginx
migrate
